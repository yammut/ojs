{
	"swagger": "2.0",
	"info": {
		"version": "3.2.x",
		"title": "Open Journal Systems - API Reference",
		"description": "This guide documents the REST API endpoints which can be accessed with this version of [Open Journal Systems](https://pkp.sfu.ca/ojs/). It is a technical reference for software developers who wish to build custom interactions with the platform.\n\nPlease consult the [REST API Usage Guide](/dev/api) for an introduction to using the API or the [Developer Documentation Hub](/dev) for documentation on the platform's internals.\n\n**Changes since v3.1.x**\n* The Author property, `isBrowseable`, was renamed to `includeInBrowse`.\n* The Author property, `isPrimaryContact`, was renamed to `primaryContact`.\n* The Submission property, `status`, was changed from an `object` to an `integer`. Please see documentation for more information.",
		"contact": {
			"name": "Public Knowledge Project",
			"url": "https://pkp.sfu.ca"
		}
	},
	"produces": [
		"application/json"
	],
	"tags": [
		{
			"name": "Submissions"
		},
		{
			"name": "Issues"
		},
		{
			"name": "Users",
			"description": "Only admins, journal editors, and subeditors can access these endpoints."
		},
		{
			"name": "Contexts",
			"description": "Only admins and journal managers can access these endpoints."
		},
		{
			"name": "Site",
			"description": "Only admins can access these endpoints, which should be accessed using `*` instead of the journal path."
		},
		{
			"name": "Email Templates",
			"description": "Only admins and journal managers can access these endpoints."
		},
		{
			"name": "Statistics",
			"description": "Only admins and journal managers can access these endpoints."
		},
		{
			"name": "Temporary Files",
			"description": "A special endpoint to be used for handling file uploads. See the [API Usage Guide](/dev/api) for more information."
		},
		{
			"name": "Backend",
			"description": "Private endpoints for OJS's UI. These endpoints will be less stable between versions. We discourage their use in third-party plugins or applications."
		}
	],
	"definitions": {
		"Author": "author",
		"Context": "context",
		"ErrorResponse": {
			"type": "object",
			"description": "A response object that will be returned when the request could not be fulfilled.",
			"properties": {
				"error": {
					"type": "string"
				},
				"errorMessage": {
					"type": "string"
				}
			}
		},
		"EmailTemplate": "emailTemplate",
		"Galley": "galley",
		"InvalidParametersResponse": {
			"type": "object",
			"description": "A response object that will be returned when there are validation errors for the request parameters. Typically used with forms.",
			"example": {
				"name": [
					"You must provide a name to create a new user."
				],
				"roles": [
					"You must assign the user to one or more roles."
				]
			}
		},
		"Issue": "issue",
		"LocaleObject": {
			"type": "object",
			"description": "Key/value pairs containing data stored by locale key.",
			"example": {
				"en_US": "Filename",
				"fr_CA": "Nom de fichier"
			}
		},
		"PublicationStats": {
			"type": "object",
			"description": "The total abstract and galley views for a published submission.",
			"properties": {
				"abstractViews": {
					"type": "integer"
				},
				"galleyViews": {
					"type": "integer"
				},
				"pdfViews": {
					"type": "integer"
				},
				"htmlViews": {
					"type": "integer"
				},
				"otherViews": {
					"type": "integer"
				},
				"publication": {
					"type": "object",
					"properties": {
						"_href": {
							"type": "string"
						},
						"fullTitle": {
							"$ref": "#/definitions/LocaleObject"
						},
						"id": {
							"type": "integer"
						},
						"shortAuthorString": {
							"type": "string"
						},
						"urlPublished": {
							"type": "string"
						},
						"urlWorkflow": {
							"type": "string"
						}
					}
				}
			}
		},
		"ReviewRound": "reviewRound",
		"ReviewerSummary": {
			"type": "object",
			"description": "A special representation of a User assigned to a reviewer group. This model presents specific details about review activity.",
			"properties": {
				"_href": {
					"type": "string"
				},
				"affiliation": {
					"$ref": "#/definitions/LocaleObject"
				},
				"averageReviewCompletionDays": {
					"type": "integer"
				},
				"dateLastReviewAssignment": {
					"type": "string"
				},
				"disabled": {
					"type": "boolean"
				},
				"fullName": {
					"type": "string"
				},
				"gossip": {
					"$ref": "#/definitions/LocaleObject"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserGroup"
					}
				},
				"id": {
					"type": "integer"
				},
				"interests": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/UserInterest"
					}
				},
				"reviewsActive": {
					"type": "integer"
				},
				"reviewsCompleted": {
					"type": "integer"
				},
				"reviewsCancelled": {
					"type": "integer"
				},
				"reviewsDeclined": {
					"type": "integer"
				},
				"userName": {
					"type": "string"
				}
			}
		},
		"Section": "section",
		"Site": "site",
		"Submission": "submission",
		"SubmissionFile": "submissionFile",
		"ThemeOptions": {
			"type": "object",
			"description": "A theme with values for any of its theme options. The theme is provided in the `themePluginPath` key. Other keys may or may not exist depending on what options have been defined by that theme.",
			"properties": {
				"themePluginPath": {
					"type": "string"
				},
				"...": {
					"type": "string"
				}
			}
		},
		"TimelineInterval": {
			"type": "object",
			"properties": {
				"date": {
					"type": "string"
				},
				"label": {
					"type": "string"
				},
				"value": {
					"type": "integer"
				}
			}
		},
		"User": "user",
		"UserGroup": "userGroup",
		"UserInterest": {
			"type": "object",
			"description": "A user's review interests.",
			"properties": {
				"id": {
					"type": "integer"
				},
				"interest": {
					"type": "string"
				}
			}
		}
	},
	"paths": {
		"/submissions": {
			"get": {
				"tags": [
					"Submissions"
				],
				"summary": "Get a list of submissions.",
				"description": "See `/submissions/{submissionId}` for notes about submission properties.",
				"parameters": [
					{
						"name": "status",
						"description": "Filter results by submission status. Pass more than one status in a comma-separated list (eg - `3,4`). Must match the value of the `STATUS_QUEUED`, `STATUS_PUBLISHED` or `STATUS_DECLINED` constants in OJS 3.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "assignedTo",
						"description": "Filter results by those assigned to this user ID. All users except managers and admins are automatically restricted to assigned submissions and do not need to pass this parameter.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "count",
						"description": "How many results to return in a single request. Default is `20`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "offset",
						"description": "Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "orderBy",
						"description": "Order the results returned. Must be one of `dateSubmitted`, `lastModified` or `title`. Default is `dateSubmitted`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "orderDirection",
						"description": "Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "isIncomplete",
						"description": "Filter the results by those for which the author has not yet completed the submission process.",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "isOverdue",
						"description": "Filter the results by those for which a reviewer has missed a deadline.",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "daysInactive",
						"description": "Filter the results by those which have not had activity for the last X days.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "sectionIds",
						"description": "Filter the results by those assigned to a section.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter the results by a search phrase matched against the title and authors.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "List of submissions.",
						"schema": {
							"type": "object",
							"properties": {
								"itemsMax": {
									"type": "integer"
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/SubmissionSummary"
									}
								}
							}
						}
					},
					"400": {
						"description": "You do not have permission to access submission assigned to the user requested in the `assignedTo` parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/submissions/{submissionId}": {
			"get": {
				"tags": [
					"Submissions"
				],
				"summary": "Get a submission by ID.",
				"description": "* Unpublished submissions are only returned for assigned participants, editors and admins.\n* `abstract` includes HTML markup.\n* `pages` is usually a `string`. But in some cases it may return an array of arrays. Each array contains two items: the start and end page. Example: `[[25, 31], [45, 62]]`.\n* `submissionProgress` will be > 0 if the submission is incomplete.\n* `stages`, `reviewRounds` and `reviewAssignments` should only be returned for participants assigned to the submission.\n* `reviewAssignments` should only expose user-identifying information for editors and admins.",
				"parameters": [
					{
						"name": "submissionId",
						"in": "path",
						"descriptions": "Submission ID",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Submission detais.",
						"schema": {
							"$ref": "#/definitions/Submission"
						}
					},
					"403": {
						"description": "You do not have permission to access this submissions.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested submission could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/submissions/{submissionId}/galleys": {
			"get": {
				"tags": [
					"Submissions"
				],
				"summary": "Get a submisssion's galleys.",
				"description": "* This endpoint will not be available until a submission has reached the Production stage.\n* `_parent` will return the API URL representing the associated submission.\n* `publishedUrl` will point to the frontend galley view (eg - `/article/view/<submission-id>/<galley-id>`).\n* Some of the galley file data will only be present for supplementary and artwork files.",
				"parameters": [
					{
						"name": "submissionId",
						"in": "path",
						"descriptions": "Submission ID",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "List of the submission's galleys.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Galley"
							}
						}
					},
					"403": {
						"description": "You do not have permission to access this submission.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested submission could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/submissions/{submissionId}/participants": {
			"get": {
				"tags": [
					"Submissions"
				],
				"summary": "Get the participants assigned to a submisssion.",
				"parameters": [
					{
						"name": "submissionId",
						"in": "path",
						"descriptions": "Submission ID",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "List of users assigned to a submission",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserSummary"
							}
						}
					},
					"404": {
						"description": "The requested submission could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/submissions/{submissionId}/participants/{stageId}": {
			"get": {
				"tags": [
					"Submissions"
				],
				"summary": "Get the participants assigned to a stage of this submisssion's workflow.",
				"parameters": [
					{
						"name": "submissionId",
						"in": "path",
						"descriptions": "Submission ID",
						"required": true,
						"type": "integer"
					},
					{
						"name": "stageId",
						"in": "path",
						"descriptions": "Stage ID",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "List of users assigned to the requested stage of the requested submission",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/UserSummary"
							}
						}
					},
					"404": {
						"description": "The requested submission could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/issues": {
			"get": {
				"tags": [
					"Issues"
				],
				"summary": "Get a list of issues.",
				"description": "Results ar eeordered by `datePublished` with the most recent first.",
				"parameters": [
					{
						"name": "count",
						"description": "How many results to return in a single request. Default is `20`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "offset",
						"description": "Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "orderBy",
						"description": "Order the results returned. Must be one of `datePublished`, `lastModified` or `seq`. Default is `datePublished`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "orderDirection",
						"description": "Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "isPublished",
						"description": "Filter returned issues by those that have been published. Pass a `false` value to return only unpublished issues. Only administrators and journal managers are allowed to access unpublished issues.",
						"in": "query",
						"required": false,
						"type": "boolean"
					},
					{
						"name": "volumes",
						"description": "Filter returned issues by those in a specific volume.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "numbers",
						"description": "Filter returned issues by those assigned a specific number.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "years",
						"description": "Filter returned issues by those in a specific year.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "List of issues.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/IssueSummary"
							}
						}
					},
					"400": {
						"description": "The requested volume, number or year is not valid.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/issues/current": {
			"get": {
				"tags": [
					"Issues"
				],
				"summary": "Get the current issue.",
				"responses": {
					"200": {
						"description": "The current issue.",
						"schema": {
							"$ref": "#/definitions/Issue"
						}
					},
					"404": {
						"description": "This journal does not have a current issue.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/issues/{issueId}": {
			"get": {
				"tags": [
					"Issues"
				],
				"summary": "Get an issue by ID.",
				"description": "If the issue has a custom section order, the `seq` property of each `SectionSummary` will reflect the sequence for that issue.",
				"responses": {
					"200": {
						"description": "The requested issue.",
						"schema": {
							"$ref": "#/definitions/Issue"
						}
					},
					"404": {
						"description": "The requested issue could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get a list of users.",
				"parameters": [
					{
						"name": "roleIds",
						"description": "Filter the results by those who have one of these user role IDs.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "status",
						"description": "Filter results by active/disabled users. Must be one of `active`, `disabled`, `all`. Default is `active`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "assignedToSubmission",
						"description": "Filter results by those assigned to this submission ID.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "assignedToSubmissionStage",
						"description": "Filter results by those assigned to this submission stage. Will be ignored if no `assignedToSubmission` parameter exists.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "assignedToSection",
						"description": "Filter the results by those assigned as section editors to this section ID.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "count",
						"description": "How many results to return in a single request. Default is `20`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "offset",
						"description": "Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "orderBy",
						"description": "Order the results returned. Must be one of `id`, `familyName` or `givenName`. Default is `id`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "orderDirection",
						"description": "Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter the results by a search phrase matched against the `userName`, `givenName`, `familyName`, `email`, `affiliation`, `biography` and `orcid`.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A list of users.",
						"schema": {
							"type": "object",
							"properties": {
								"itemsMax": {
									"type": "integer"
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/UserSummary"
									}
								}
							}
						}
					},
					"403": {
						"description": "Only administrators, journal managers and editors are allowed to access users on this site.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/users/{userId}": {
			"get": {
				"tags": [
					"Users"
				],
				"summary": "Get a user by ID.",
				"parameters": [
					{
						"name": "userId",
						"description": "User ID",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "User details.",
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				}
			}
		},
		"/users/reviewers": {
			"get": {
				"tags": [
					"Users"
				],
				"parameters": [
					{
						"name": "status",
						"description": "Filter results by active/disabled users. Must be one of `active`, `disabled`, `all`. Default is `active`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "reviewerRating",
						"description": "Filter results by those who have an average review assignment rating of at least `X` (valid ratings are between `1` and `5`).",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "reviewStage",
						"description": "Filter results by reviewers for one of the review stages in the workflow. Must be one of `WORKFLOW_STAGE_ID_INTERNAL_REVIEW` or `WORKFLOW_STAGE_ID_EXTERNAL_REVIEW`. In OJS, the review stage is `WORKFLOW_STAGE_ID_EXTERNAL_REVIEW`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "reviewsCompleted",
						"description": "Filter results by those who have completed at least `X` reviews. You can also pass a range as a string formatted as `X-X`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "reviewsActive",
						"description": "Filter results by those who have `X` review assignments currently in progress. You can also pass a range as a string formatted as `X-X`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "daysSinceLastAssignment",
						"description": "Filter results by those who's last review was assigned at least `X` days ago. You can also pass a range as a string formatted as `X-X`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "averageCompletion",
						"description": "Filter results by those who complete a review assignment within `X` days on average.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "count",
						"description": "How many results to return in a single request. Default is `20`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "offset",
						"description": "Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "orderBy",
						"description": "Order the results returned. Must be one of `id`, `familyName` or `givenName`. Default is `id`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "orderDirection",
						"description": "Return the results in ascending or descending order. Must be `ASC` or `DESC`. Default is `DESC`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter the results by a search phrase matched against the `userName`, `givenName`, `familyName`, `email`, `affiliation`, `biography`, `orcid`, `interests`, and `gossip`.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "List of reviewers.",
						"schema": {
							"type": "object",
							"properties": {
								"itemsMax": {
									"type": "integer"
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ReviewerSummary"
									}
								}
							}
						}
					},
					"403": {
						"description": "Only administrators, journal managers and editors are allowed to access users on this site.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/contexts": {
			"get": {
				"tags": [
					"Contexts"
				],
				"summary": "Get a list of journals.",
				"parameters": [
					{
						"name": "isEnabled",
						"description": "Filter results by enabled/disabled contexts. Any truthy or falsey value will get enabled/disabled contexts. Leave this parameter out to get all contexts.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "count",
						"description": "How many results to return in a single request. Default is `20`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "type"
					},
					{
						"name": "offset",
						"description": "Offset the results returned. Use this to receive subsequent pages of requests.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "searchPhrase",
						"description": "Filter results by a search phrase matched against the `name`, `description`, `acronym`, or `abbreviation`.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses":  {
					"200": {
						"description": "List of contexts.",
						"schema": {
							"type": "object",
							"properties": {
								"itemsMax": {
									"type": "integer"
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/ContextSummary"
									}
								}
							}
						}
					},
					"403": {
						"description": "You do not have permission to view disabled contexts.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"post":  {
				"tags": [
					"Contexts"
				],
				"summary": "Create a new context (journal/press).",
				"parameters": [
					{
						"description": "Details about the context that should be created. The `path` field is required. The `name` is required in the site's primary locale.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ContextEditable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Details of the context that was just added.",
						"schema": {
							"$ref": "#/definitions/Context"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					}
				}
			}
		},
		"/contexts/{contextId}": {
			"get": {
				"tags": [
					"Contexts"
				],
				"summary": "Get a context by ID.",
				"parameters": [
					{
						"name": "contextId",
						"description": "Context ID",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Context details. Some details may be withheld if you are not a site admin or manager of that context.",
						"schema": {
							"$ref": "#/definitions/Context"
						}
					},
					"403": {
						"description": "You do not have permission to view this context.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested context could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Contexts"
				],
				"summary": "Edit a context (journal/press).",
				"parameters": [
					{
						"name": "contextId",
						"description": "Context ID",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"description": "The details about a context that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ContextEditable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The context that was just edited with the current values after the edit has occurred.",
						"schema": {
							"$ref": "#/definitions/Context"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					},
					"403": {
						"description": "There are two possible conditions that will result in a `403` response. 1. You do not have permission to edit this context. 2. You submitted changes for one context from the API endpoint of another context. To edit a context, you must make a request to that context's API endpoint or the site-wide API endpoint.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested context could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Contexts"
				],
				"summary": "Delete a context (journal/press).",
				"parameters": [
					{
						"name": "contextId",
						"description": "Context ID",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Details of the context that was just deleted.",
						"schema": {
							"$ref": "#/definitions/Context"
						}
					},
					"403": {
						"description": "You do not have permission to delete this context.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested context could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/contexts/{contextId}/theme": {
			"get": {
				"tags": [
					"Contexts"
				],
				"summary": "Get a context's active theme and any theme options defined by it.",
				"parameters": [
					{
						"name": "contextId",
						"description": "Context ID",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "The response will include the theme plugin directory in `themePluginPath`. Any theme options will be provided in additional keys based on the option name.",
						"schema": {
							"$ref": "#/definitions/ThemeOptions"
						}
					},
					"403": {
						"description": "You do not have permission to view this context.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested context could not be found. A 404 may also be returned when a context has no active theme, or the active theme plugin has not been installed or enabled.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Contexts"
				],
				"summary": "Edit a context's (journal/press) active theme and options defined by that theme.",
				"parameters": [
					{
						"name": "contextId",
						"description": "Context ID",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"description": "The details you want to edit. The `themePluginPath` is required to specify the active theme, even if the theme is not being changed. Any additional keys/values must match the options defined by that theme.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ThemeOptions"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The new theme and values for any of its theme options.",
						"schema": {
							"$ref": "#/definitions/ThemeOptions"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					},
					"403": {
						"description": "There are two possible conditions that will result in a `403` response. 1. You do not have permission to edit this context. 2. You submitted changes for one context from the API endpoint of another context. To edit a context, you must make a request to that context's API endpoint or the site-wide API endpoint.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested context could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/site": {
			"get": {
				"tags": [
					"Site"
				],
				"summary": "Get the overall site object.",
				"responses":  {
					"200": {
						"description": "Site settings.",
						"schema": {
							"$ref": "#/definitions/Site"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Site"
				],
				"summary": "Edit a site.",
				"parameters": [
					{
						"description": "The details about the site that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/SiteEditable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The site details with the current values after the edit has occurred.",
						"schema": {
							"$ref": "#/definitions/Site"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					}
				}
			}
		},
		"/site/theme": {
			"get": {
				"tags": [
					"Site"
				],
				"summary": "Get the site's active theme and any theme options defined by it.",
				"responses": {
					"200": {
						"description": "The response will include the theme plugin directory in `themePluginPath`. Any theme options will be provided in additional keys based on the option name.",
						"schema": {
							"$ref": "#/definitions/ThemeOptions"
						}
					},
					"404": {
						"description": "Details about the active theme could not be found. This can occur when the active theme plugin is not installed or enabled.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Site"
				],
				"summary": "Edit the site's active theme and options defined by that theme.",
				"parameters": [
					{
						"description": "The details you want to edit. The `themePluginPath` is required to specify the active theme, even if the theme is not being changed. Any additional keys/values must match the options defined by that theme.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/ThemeOptions"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The new theme and values for any of its theme options.",
						"schema": {
							"$ref": "#/definitions/ThemeOptions"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					}
				}
			}
		},
		"/emailTemplates": {
			"get": {
				"tags": [
					"Email Templates"
				],
				"summary": "Get a list of email templates.",
				"parameters": [
					{
						"name": "isEnabled",
						"description": "Filter results by enabled/disabled email templates. Any truthy or falsey value will get enabled/disabled email templates.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "isCustom",
						"description": "Filter results by those with or without a default template. A truthy value will return only templates with a key that does not match one of the default templates. A falsey value will return only templates with a key that matches one of the default templates. Note that a default template may be customized, but this does not qualify for `isCustom`. Only completely custom templates, not a customization of a default template, will be returned when `isCustom` is `true`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "fromRoleIds",
						"description": "Filter results by email templates sent by one or more role IDs. Separate role IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "toRoleIds",
						"description": "Filter results by email templates received by one or more role IDs. Separate role IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter results by a search phrase matched against the `key`, `subject`, `body`, or `description`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "count",
						"description": "How many results to return in a single request. Default is `30`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "type"
					},
					{
						"name": "offset",
						"description": "Offset the results returned. Use this to receive subsequent pages of requests.",
						"in": "query",
						"required": false,
						"type": "integer"
					}
				],
				"responses":  {
					"200": {
						"description": "List of email templates.",
						"schema": {
							"type": "object",
							"properties": {
								"itemsMax": {
									"type": "integer"
								},
								"items": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/EmailTemplateSummary"
									}
								}
							}
						}
					},
					"403": {
						"description": "You do not have permission to view email templates.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"post":  {
				"tags": [
					"Email Templates"
				],
				"summary": "Create a new email template.",
				"parameters": [
					{
						"description": "Details about the email template that should be created.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/EmailTemplateEditable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Details of the email template that was just added.",
						"schema": {
							"$ref": "#/definitions/EmailTemplate"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					}
				}
			}
		},
		"/emailTemplates/{key}": {
			"get": {
				"tags": [
					"Email Templates"
				],
				"summary": "Get an email template by its email key.",
				"parameters": [
					{
						"name": "key",
						"description": "Email template key",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Email template details.",
						"schema": {
							"$ref": "#/definitions/EmailTemplate"
						}
					},
					"403": {
						"description": "You do not have permission to view email templates.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested email template could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"put": {
				"tags": [
					"Email Templates"
				],
				"summary": "Edit an email template.",
				"parameters": [
					{
						"name": "key",
						"description": "Email template key",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"description": "The details about the email template that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified.",
						"in": "body",
						"schema": {
							"$ref": "#/definitions/EmailTemplateEditable"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The email template that was just edited with the current values after the edit has occurred.",
						"schema": {
							"$ref": "#/definitions/EmailTemplate"
						}
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					},
					"403": {
						"description": "There are two possible conditions that will result in a `403` response. 1. You do not have permission to edit this email template. 2. You are an admin and you submitted changes for an email template in one context from the API endpoint of another context. To edit an email template, you must make a request to the API endpoint of that email template's context.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested email template could not be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Email Templates"
				],
				"summary": "Delete an email template. Default templates that have not been modified can not be deleted.",
				"parameters": [
					{
						"name": "key",
						"description": "Email template key",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Details of the email template that was just deleted.",
						"schema": {
							"$ref": "#/definitions/EmailTemplate"
						}
					},
					"403": {
						"description": "You do not have permission to delete this email template.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested email template could not be found. This will be returned if you try to delete a default email template that has not been modified.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/emailTemplates/restoreDefaults": {
			"delete": {
				"tags": [
					"Email Templates"
				],
				"summary": "Delete custom templates and reset all templates to their default settings.",
				"responses": {
					"200": {
						"description": "A list of template keys which were deleted or reset.",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"/stats/publications": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get total views for a set of publications.",
				"description": "Returns a list of publications ordered by their total abstract views. Includes total views by abstract, all galleys, PDF galleys, HTML galleys and other galleys.",
				"parameters": [
					{
						"name": "dateStart",
						"description": "Return stats for publications after this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateEnd",
						"description": "Return stats for publications before this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sectionIds",
						"description": "Filter results by publications in these sections. Separate section IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "submissionIds",
						"description": "Filter results by these publications. Separate submission IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter results by publications that match this search phrase. Searches the same submission properties as the `searchPhrase` parameter in the `/submissions` endpoint.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "count",
						"description": "How many publications to return in a single request. Default is `30`. Max is `100`.",
						"in": "query",
						"required": false,
						"type": "type"
					},
					{
						"name": "offset",
						"description": "Offset the publications returned. Use this to receive subsequent pages of requests.",
						"in": "query",
						"required": false,
						"type": "integer"
					},
					{
						"name": "orderDirection",
						"description": "Order the results in `ASC` or `DESC` order. Default is `DESC`.",
						"in": "query",
						"required": false,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "A list of publications with their total stats during the requested period.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/PublicationStats"
							}
						}
					},
					"400": {
						"description": "Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "You do not have permission to access statistics for this journal or press.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested resource was not found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/stats/publications/abstract": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get total abstract views in a timeline.",
				"description": "Returns a monthly or daily timeline of abstract views for the publications which match the request parameters.",
				"parameters": [
					{
						"name": "timelineInterval",
						"description": "Return a timeline by `month` or `day`. Default is `month`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateStart",
						"description": "Return stats for publications after this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateEnd",
						"description": "Return stats for publications before this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sectionIds",
						"description": "Filter results by publications in these sections. Separate section IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "submissionIds",
						"description": "Filter results by these publications. Separate submission IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter results by publications that match this search phrase. Searches the same submission properties as the `searchPhrase` parameter in the `/submissions` endpoint.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A list of days or months with the total stats for that day or month.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TimelineInterval"
							}
						}
					},
					"400": {
						"description": "Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "You do not have permission to access statistics for this journal or press.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested resource was not found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/stats/publications/galley": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get total galleys views in a timeline.",
				"description": "Returns a monthly or daily timeline of galley views for the publications which match the request parameters.",
				"parameters": [
					{
						"name": "timelineInterval",
						"description": "Return a timeline by `month` or `day`. Default is `month`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateStart",
						"description": "Return stats for publications after this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateEnd",
						"description": "Return stats for publications before this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "sectionIds",
						"description": "Filter results by publications in these sections. Separate section IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "submissionIds",
						"description": "Filter results by these publications. Separate submission IDs with a comma.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "searchPhrase",
						"description": "Filter results by publications that match this search phrase. Searches the same submission properties as the `searchPhrase` parameter in the `/submissions` endpoint.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A list of days or months with the total stats for that day or month.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TimelineInterval"
							}
						}
					},
					"400": {
						"description": "Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "You do not have permission to access statistics for this journal or press.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested resource was not found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/stats/publications/{submissionId}": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get the total views of one publication.",
				"description": "Returns a publication's total views by abstract, all galleys, PDF galleys, HTML galleys and other galleys.",
				"parameters": [
					{
						"name": "dateStart",
						"description": "Return stats for publications after this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateEnd",
						"description": "Return stats for publications before this date.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "The total stats for the publication during the period requested.",
						"schema": {
							"$ref": "#/definitions/PublicationStats"
						}
					},
					"400": {
						"description": "Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "You do not have permission to access statistics for this journal or press.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested resource was not found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/stats/publications/{submissionId}/abstract": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get the abstract views of one publication in a timeline.",
				"description": "Returns a monthly or daily timeline of abstract views for the requested publication.",
				"parameters": [
					{
						"name": "timelineInterval",
						"description": "Return a timeline by `month` or `day`. Default is `month`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateStart",
						"description": "Return stats for publications after this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateEnd",
						"description": "Return stats for publications before this date.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A list of days or months with the total stats for that day or month.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TimelineInterval"
							}
						}
					},
					"400": {
						"description": "Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "You do not have permission to access statistics for this journal or press.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested resource was not found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/stats/publications/{submissionId}/galley": {
			"get": {
				"tags": [
					"Statistics"
				],
				"summary": "Get the galleys views of one publication in a timeline.",
				"description": "Returns a monthly or daily timeline of galley views for the requested publication.",
				"parameters": [
					{
						"name": "timelineInterval",
						"description": "Return a timeline by `month` or `day`. Default is `month`.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateStart",
						"description": "Return stats for publications after this date.",
						"in": "query",
						"required": false,
						"type": "string"
					},
					{
						"name": "dateEnd",
						"description": "Return stats for publications before this date.",
						"in": "query",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "A list of days or months with the total stats for that day or month.",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/TimelineInterval"
							}
						}
					},
					"400": {
						"description": "Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"403": {
						"description": "You do not have permission to access statistics for this journal or press.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					},
					"404": {
						"description": "The requested resource was not found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/temporaryFiles": {
			"options": {
				"tags": [
					"Temporary Files"
				],
				"summary": "Responds with the appopriate headers to indicate file uploads maybe be sent, required by some file upload utilities which send a preflight request.",
				"responses": {
					"200": {
						"description": "An empty response body."
					}
				}
			},
			"post": {
				"tags": [
					"Temporary Files"
				],
				"summary": "Upload a file to the temporary file storage area and receive a temporary file ID.",
				"parameters": [
					{
						"name": "...",
						"description": "Use any parameter key to upload your file. The API endpoint will retrieve the first uploaded file.",
						"in": "body"
					}
				],
				"responses": {
					"200": {
						"description": "The temporary file ID to use in other API requests.",
						"schema": {
							"type": "object",
							"properties": {
								"id": {
									"type": "integer"
								}
							}
						}
					},
					"400": {
						"description": "No uploaded file could be found.",
						"schema": {
							"$ref": "#/definitions/ErrorResponse"
						}
					}
				}
			}
		},
		"/_payments": {
			"put": {
				"tags": [
					"Backend"
				],
				"summary": "Used to save payment settings.",
				"description": "This endpoint is used on the settings page to save payment plugin settings alongside the general journal settings for enabling payments and setting the currency.",
				"parameters": [
					{
						"description": "None of these properties are required. In addition to `paymentsEnabled` and `currency`, you may pass any property that corresponds with a setting for an enabled `paymethod` plugin.",
						"in": "body",
						"schema": {
							"type": "object",
							"properties": {
								"paymentsEnabled": {
									"type": "boolean"
								},
								"currency": {
									"type": "string"
								},
								"...": {
									"type": "string"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"description": "The parameters you submitted"
					},
					"400": {
						"description": "The information you submitted did not pass validation. The response will contain information about which parameters failed validation.",
						"schema": {
							"$ref": "#/definitions/InvalidParametersResponse"
						}
					}
				}
			}
		},
		"/_submissions": {
			"get": {
				"tags": [
					"Backend"
				],
				"summary": "Used in submission lists.",
				"description": "This endpoint delivers a little bit of extra information about each submission that is used in the submissions list. This private endpoint saves a few extra HTTP requests, but it is more database-intensive for each query.",
				"parameters": [
					{
						"description": "Accepts most parameters supported by the public `/submissions` endpoint."
					}
				],
				"responses": {
					"200": {
						"description": "List of submissions."
					}
				}
			}
		}
	}
}
